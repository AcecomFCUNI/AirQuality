generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id       String @id
  name     String @db.VarChar(255)
  lastName String @db.VarChar(255)
  email    String @unique @db.VarChar(255)

  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)

  Modules Module[]

  @@map("clients")
}

model Module {
  id     Int    @id @default(autoincrement())
  userId String @db.VarChar(255)
  name   String @db.VarChar(255)

  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)

  Client  Client   @relation(fields: [userId], references: [id])
  Sensors Sensor[]

  @@map("modules")
}

model Sensor {
  id       Int @id @default(autoincrement())
  moduleId Int

  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)

  Devices    Device[]
  SensorData SensorData[]
  Module     Module       @relation(fields: [moduleId], references: [id])

  @@map("sensors")
}

model SensorData {
  id       Int @id @default(autoincrement())
  sensorId Int

  createdAt DateTime? @default(now()) @db.Timestamptz(6)

  aq          Float @default(0)
  h2s         Float @default(0)
  humidity    Float @default(0)
  co2         Float @default(0)
  pm2_5       Float @default(0)
  pressure    Float @default(0)
  temperature Float @default(0)

  Sensor Sensor @relation(fields: [sensorId], references: [id])

  @@map("sensorData")
}

model Device {
  id       Int          @id @default(autoincrement())
  sensorId Int
  name     String       @db.VarChar(255)
  status   DeviceStatus @default(OFF)

  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)

  Sensor Sensor @relation(fields: [sensorId], references: [id])

  @@map("devices")
}

enum DeviceStatus {
  ON
  OFF
}
